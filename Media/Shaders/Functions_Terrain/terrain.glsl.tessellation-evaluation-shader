#version 420 core


layout (quads, equal_spacing, ccw) in;


layout (set = 0, binding = 1) uniform sampler2D imageTerrainHeight;


layout (set = 0, binding = 0) uniform myUniformBuffer {
    mat4 modelViewProjectionMatrix;
    vec4 viewPosition;
};


layout (location = 0) in    vec2    teTex[];


layout (location = 0) out   vec3    gPos;


void main()
{
    vec3 pos = mix(
        mix(gl_in[0].gl_Position.xyz, gl_in[1].gl_Position.xyz, gl_TessCoord[0]),
        mix(gl_in[2].gl_Position.xyz, gl_in[3].gl_Position.xyz, gl_TessCoord[0]),
        gl_TessCoord[1]
    );
    vec2 tex = mix(
        mix(teTex[0], teTex[1], gl_TessCoord[0]),
        mix(teTex[2], teTex[3], gl_TessCoord[0]),
        gl_TessCoord[1]
    );
    
    vec4    dataTerrainHeight = texture(imageTerrainHeight, tex);
    float   height = dataTerrainHeight.x * 250.0f;
    
    pos.y += height;
    
	gl_Position = modelViewProjectionMatrix * vec4(pos, 1.0f);
    
    gPos = pos;
}

